---
title: "Grafica_26 feb"
output:
  html_document: default
  pdf_document: default
date: "2025-02-26"
---

```{r}
#install.packages("pacman")
library("pacman")
p_load("readr", 
       "dplyr",
       "ggplot2",
       "ggrepel",
       "matrixTests")
```

```{r}
PCR <- read.csv(file="https://raw.githubusercontent.com/ManuelLaraMVZ/Transcript-mica/main/datos_miRNAs.csv")
head(PCR)
```

```{r}
PCR <- read.csv(file="https://raw.githubusercontent.com/ManuelLaraMVZ/Transcript-mica/main/datos_miRNAs.csv")
head(PCR)
```

```{r}
PCR <- read.csv(file="https://raw.githubusercontent.com/ManuelLaraMVZ/Transcript-mica/main/datos_miRNAs.csv")
head(PCR)
```

```{r}
Gen_ref <- PCR %>%
filter(Condicion == "Control") %>% select(-2) 
Gen_ref
```

```{r}
Gen_int <- PCR %>%
filter(Condicion == "Target") %>% select(-2)
head(Gen_int)
```

Correr los promedios de cada columna de los genes control

```{r}
meanCx1 <- mean(Gen_ref$Cx1)
meanCx2 <- mean(Gen_ref$Cx2)
meanCx3 <- mean(Gen_ref$Cx3)
meanT1 <- mean(Gen_ref$T1)
meanT2 <- mean(Gen_ref$T2)
meanT3 <- mean(Gen_ref$T3)
```

Sacar el Delta Ct de cada columna de los genes de interes

```{r}
DCt <- Gen_int %>% 
  mutate(DCT_Cx1 = Cx1-meanCx1,
         DCT_Cx2 = Cx2-meanCx2,
         DCT_Cx3 = Cx3-meanCx3,
         DCT_T1 = T1-meanT1,
         DCT_T2 = T2-meanT2,
         DCT_T3 = T3-meanT3) %>%
  select(-2,-3,-4,-5,-6,-7)
DCt
  

```

```{r}
DosDCt <- DCt %>% 
  mutate (A = 2^-(DCT_Cx1), B = 2^-(DCT_Cx2),
          C = 2^-(DCT_Cx3), D = 2^-(DCT_T1),
          E = 2^-(DCT_T2), F = 2^-(DCT_T3)) %>% 
  select (-2:-7)
DosDCt
          
```

Estadistica para obtener los valores de p, hacemos t de Student.

```{r}
tStudent <- row_t_welch(DosDCt[,c("A","B","C")],
                        DosDCt[,c("D","E","F")])
tStudent 
```

Recuperar el valor de P para cada gen.

```{r}
PValue <- DosDCt %>% 
  mutate(PV = tStudent$pvalue,
         LPV = -log10 (PV)) %>% 
  select(1,"PV","LPV")

PValue
```

Obtener el valor de Dos Delta CT

```{r}
DosDDCT <- DosDCt %>% 
  mutate(mean_DosDCT_Cx = (A+B+C)/3,
         mean_DosDCT_Tx = (D+E+F)/3,
         DosDDCT = mean_DosDCT_Tx/mean_DosDCT_Cx,
         L2DDCt = log2 (DosDDCT)) %>% #Para la grafica necesito log2 de DosDDCT 
  select (-2:-7)
DosDDCT 
```

Grafica

```{r}
V_plot <- ggplot(mapping =aes (x=DosDDCT$L2DDCt,
                               y= PValue$LPV))+
  geom_point(color = "gray")
V_plot
```

Definir el valor estadistico de significancia y el facros de cambio

```{r}
Valor_p <- -log10(0.05)
FC <- 2
```

Adicionar los limites de la gráfica

```{r}
V_plot2 <- V_plot +
  geom_hline(yintercept = Valor_p,
             linetype = "dashed",
             color = "orange")+
  geom_vline(xintercept = FC, 
             linetype = "dashed",
             color = "red")+
   geom_vline(xintercept = -FC, 
             linetype = "dashed",
             color = "blue")+
  labs (title = "Evaluación de cambio de expresión de miRNAs",
        subtitle = "V_plot",
        caption = "Diseñó: Camila Guevara",
        x= "Log2 (FC)",
        y= "-Log10 (valor p)")+
  theme_classic()

V_plot2
```

Nombres a los valores más alejados y colores a los puntos

1o vamos a definir los valores que cambiaron significativamente

```{r}
Up_regulated <-  DosDDCT %>% 
  select(1,5) %>% 
  mutate(LVP = PValue$LPV) %>% 
  filter(LVP > Valor_p,
         L2DDCt > FC)

Up_regulated
```

```{r}
Down_regulated <-  DosDDCT %>% 
  select(1,5) %>% 
  mutate(LVP = PValue$LPV) %>% 
  filter(LVP > Valor_p,
         L2DDCt < -FC)

Down_regulated
```

Ordenarlo

```{r}
top.up <- Up_regulated %>% 
  arrange(LVP) %>% 
  head (5)

top.down <-  Down_regulated %>% 
  arrange(LVP) %>% 
  head(5)

top.up
top.down
```

Mejorar la gráfica

```{r}
V_plot3 <- V_plot2+
  geom_point(data= Up_regulated,
             x = Up_regulated$L2DDCt,
             y= Up_regulated$LVP,
             alpha = 1,
             size = 3,
             color = "#E56B35B2")+
  geom_point(data= Down_regulated,
             x = Down_regulated$L2DDCt,
             y= Down_regulated$LVP,
             alpha = 1,
             size = 3,
             color = "#3C5488B2")
V_plot3
```

Poner etiquetas a los miRNAS Sobresalientes

```{r}
V_plot4 <-  V_plot3+
  geom_label_repel (data = top.up,
                    mapping = aes(x=top.up$L2DDCt,
                                  y= top.up$LVP),
                    label = top.up$Gen,
                    max.overlaps = 50)+
   geom_label_repel (data = top.down,
                    mapping = aes(x=top.down$L2DDCt,
                                  y= top.down$LVP),
                    label = top.down$Gen,
                    max.overlaps = 50)
V_plot4
                     
                  
```
